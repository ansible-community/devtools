# These are tool versions we want to support in our matrix testing across GHA.
#
# Changing this file will likely change the jobs running on most devtools
# projects. Still projects may decide to exclude some of these. In the future
# we might even leverage https://endoflife.date/ APIs.
#
# Order is important, usually the first one is the most important version to
# test against and some projects might filter some versions.
#
# Each version entry is a `nice_version_name: effective_version` because we
# need the human name to build nice and short job names, especially as the
# effective version passed can vary a little for technical reasons.
#
# You can easily use the `yq` to build a matrix, especially as the tool is
# preinstalled on GHA runners. Example: `curl ... | yq  '.tools.node'`
# Details: https://kislyuk.github.io/yq/
#
# https://github.com/actions/virtual-environments
tools:
  node: # used by https://github.com/actions/setup-node
    "18": "18"
    "16": "16"
    "14": "14"
  python:  # used by https://github.com/actions/setup-python
    py38: "3.8"
    py39: "3.9"
    py310: "3.10"
    py311: "~3.11.0-0"
  os:  # used by "os:"
    # https://github.com/actions/virtual-environments
    linux: ubuntu-20.04
    macos: macos-12
    windows: windows-2022
# predefined profiles for most common types of repositories
profiles:
  # for all non-linux jobs, you must ensure that you add custom `name:` that
  # adds a suffix like `-macos`, `-windows`, or `-wsl` so we would not have
  # jobs with duplicate names.
  py-project:
    # implicit matrix job definition assumed these being implicit:
    # - name: ${{ matrix.name || matrix.tox_env }}
    # - runs-on: ${{ matrix.runs-on || 'ubuntu-latest' }}
    #
    # The implicit naming of GHA jobs is "name (dim1, dim2, )" and because we
    # also use name in other places that do not support any characters, is
    # better for force it to use only the safe `[\w-]+` pattern.
    - tox_env: lint
    - tox_env: packaging
    # docs is common but missing because not all projects have docs
    - tox_env: py38
      python-version: py38
    - tox_env: py39
      python-version: py39
    - tox_env: py310
      python-version: py310
    - tox_env: py311
      python-version: "~3.11.0-0"
  py-project-with-devel:
    - tox_env: lint
    - tox_env: packaging
    # docs is common but missing because not all projects have docs
    - tox_env: py38,py38-devel
      python-version: py38
    - tox_env: py39,py39-devel
      python-version: py39
    - tox_env: py310,py310-devel
      python-version: py310
    - tox_env: py311,py311-devel
      python-version: "~3.11.0-0"
